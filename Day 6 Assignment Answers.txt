Question 1 : Create a array containing five objects with properties { name, age , city , salary }
A. Display all the objects in a table
B. Create a search functionality for name and city
C. Delete button to delete records
D. Data is not permanent

Answer: 

var rows = [{
    name: "John",
    age: 20,
    city: delhi"
}, {
    name: "Jack",
    age: 50,
    city: mumbai"
}, {
    name: "Son",
    age: 45,
    city: chennai"
}];

var html = "<table border='1|1'>";
for (var i = 0; i < rows.length; i++) {
    html+="<tr>";
    html+="<td>"+rows[i].name+"</td>";
    html+="<td>"+rows[i].age+"</td>";
    html+="<td>"+rows[i].city+"</td>";

    html+="</tr>";

}
html+="</table>";
document.getElementById("box").innerHTML = html;


Question 2 : Create a blank array and later on create a add bus functionality bus object contains {name, source,
destination, number, passenger capacity}
A. A form to add new bus
B. Display data in table format
C. Search by source and destination
D. Data should be stored permanently in localstorage

Answer :

const subscriptions = { }
const getNextUniqueId = getIdGenerator()
function subscribe(eventType, callback) {
  const id = getNextUniqueId()
  // create new entry for eventType
  if(!subscriptions[eventType])
    subscriptions[eventType] = { }
  // the callback is registered
  subscriptions[eventType][id] = callback
  return {
    unsubscribe: () => {
      delete subscriptions[eventType][id]
      if(Object.keys(subscriptions[eventType]).length === 0)
        delete subscriptions[eventType]
    }
  }
}

function publish(eventType, arg) {
  if(!subscriptions[eventType])
    return
  Object.keys(subscriptions[eventType])
        .forEach(id => subscriptions[eventType][id](arg))
}

const subscription = EventBus.subscribe(
  "print",
  message => console.log(`printing: ${message}`)
)

EventBus.publish("print", "some text")








